@page "/app"
@attribute [Authorize]

@using Quarter.Components
@using Quarter.Core.Models
@using Quarter.Core.Queries
@using Quarter.Core.Utils
@using Quarter.Services

<ApplicationPage>
    <PageContent>
        <PageColumns>
            <ContextContent></ContextContent>
            <MainContent>
                @foreach (var timesheet in Timesheets())
                {
                    <TimesheetTotalWidget Timesheet="timesheet"/>
                }
            </MainContent>
            <ToolbarContent>
                <TodayWidget CurrentDate="DateTime.Today" />
                <WeekTotalWidget Summary="_summaryViewModel" />
            </ToolbarContent>
        </PageColumns>
    </PageContent>
</ApplicationPage>

@inject IUserAuthorizationService _userAuthorizationService;
@inject IQueryHandler _queryHandler

@code
{
    private TimesheetSummaryQueryResult? _summaryViewModel;

    private IEnumerable<Timesheet> Timesheets()
        => _summaryViewModel?.Timesheets ?? Array.Empty<Timesheet>();

    protected override async Task OnInitializedAsync()
    {
        var oc = await OperationContextForCurrentUser();
        _summaryViewModel = await _queryHandler.ExecuteAsync(TimesheetSummaryQuery.ForWeek(Date.Today()), oc, default);
    }

    private async Task<OperationContext> OperationContextForCurrentUser()
    {
        var currentId = await _userAuthorizationService.CurrentUserId();
        return new OperationContext(currentId);
    }
}